/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myfitdayapp;

import java.awt.Color;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author olgachristensen
 */
public class EditFood extends javax.swing.JFrame {

    private DBHandler dbh;
    private ResultSet rs;
    public String date;
    private int selectedRow;
    private DefaultTableModel dtm;
    
    /**
     * Creates new form EditFood
     */
    public EditFood(String d) {
        
        dbh = new DBHandler();
        rs = dbh.getFoodTable(d);
        date = d;
        selectedRow = 0;
        
        setUndecorated(true);
        initComponents();
        showDateLable.setText(d);
        setColWidth();
        
    }
    
    private void setColWidth() {
        foodTable.getColumnModel().getColumn(0).setPreferredWidth(120);
        foodTable.getColumnModel().getColumn(1).setPreferredWidth(40);
        foodTable.getColumnModel().getColumn(2).setPreferredWidth(40);
        foodTable.getColumnModel().getColumn(3).setPreferredWidth(40);
        foodTable.getColumnModel().getColumn(4).setPreferredWidth(40);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        foodTable = new javax.swing.JTable(buildTable(rs)) {
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }
        };
        btnClose = new javax.swing.JButton();
        nameLable = new javax.swing.JLabel();
        calLable = new javax.swing.JLabel();
        fatLable = new javax.swing.JLabel();
        carbLable = new javax.swing.JLabel();
        proteinLable = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        calField = new javax.swing.JTextField();
        fatField = new javax.swing.JTextField();
        carbField = new javax.swing.JTextField();
        proteinField = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        dateLable = new javax.swing.JLabel();
        showDateLable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setResizable(false);

        foodTable.setSelectionBackground(new java.awt.Color(153, 153, 153));
        foodTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        foodTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foodTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(foodTable);

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        nameLable.setText("Name:");

        calLable.setText("Calories:");

        fatLable.setText("Fat:");

        carbLable.setText("Carbs:");

        proteinLable.setText("Protein:");

        btnUpdate.setText("Update");
        btnUpdate.setEnabled(false);
        btnUpdate.setMaximumSize(new java.awt.Dimension(90, 29));
        btnUpdate.setMinimumSize(new java.awt.Dimension(90, 29));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        dateLable.setText("Date:");

        showDateLable.setText("today");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dateLable)
                        .addGap(54, 54, 54)
                        .addComponent(showDateLable))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLable)
                            .addComponent(calLable)
                            .addComponent(fatLable)
                            .addComponent(carbLable)
                            .addComponent(proteinLable))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameField)
                            .addComponent(calField)
                            .addComponent(fatField)
                            .addComponent(carbField)
                            .addComponent(proteinField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLable)
                    .addComponent(showDateLable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLable)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calLable)
                    .addComponent(calField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fatLable)
                    .addComponent(fatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(carbLable)
                    .addComponent(carbField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(proteinLable)
                    .addComponent(proteinField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClose)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        //try { rs.close(); }
        //catch (SQLException e) { System.out.println(e); }
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        //String[] data = {nameField.getText(), calField.getText(), fatField.getText(), carbField.getText(), proteinField.getText()};

        dtm.removeRow(selectedRow);
        dbh.updateFoodDelete(date, selectedRow);
        emptyTextBoxes();
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void foodTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foodTableMouseClicked
        
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);
        
        selectedRow = foodTable.getSelectedRow();
        System.out.println(selectedRow);
        
        String n = foodTable.getModel().getValueAt(selectedRow, 0).toString();
        nameField.setText(n);
            
        String cal = foodTable.getModel().getValueAt(selectedRow, 1).toString();
        calField.setText(cal);
        
        String f = foodTable.getModel().getValueAt(selectedRow, 2).toString();
        fatField.setText(f);
        
        String c = foodTable.getModel().getValueAt(selectedRow, 3).toString();
        carbField.setText(c);
        
        String p = foodTable.getModel().getValueAt(selectedRow,4).toString();
        proteinField.setText(p);
            
            
        
        
    }//GEN-LAST:event_foodTableMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        
        Border border = BorderFactory.createLineBorder(Color.RED, 1);
        
        nameField.setBorder(null);
        calField.setBorder(null);
        fatField.setBorder(null);
        carbField.setBorder(null);
        proteinField.setBorder(null);
        
        try {
            if (nameField.getText().length() != 0 && nameField.getText().length() <= 20) {
        
                foodTable.setValueAt(nameField.getText(), selectedRow, 0);
                foodTable.setValueAt(calField.getText(), selectedRow, 1);
                foodTable.setValueAt(fatField.getText(), selectedRow, 2);
                foodTable.setValueAt(carbField.getText(), selectedRow, 3);
                foodTable.setValueAt(proteinField.getText(), selectedRow, 4);

                String[] data = {nameField.getText(), calField.getText(), fatField.getText(), carbField.getText(), proteinField.getText()};
                //updateDB(nameField.getText(), calField.getText(), fatField.getText(), carbField.getText(), proteinField.getText());

                dbh.updateFoodEdit(date, selectedRow, data);

                emptyTextBoxes();
            }
            else
                nameField.setBorder(border);
        
        }
        catch (NumberFormatException e) {
            
            try {
                int cal = Integer.parseInt(calField.getText());
            } catch (NumberFormatException ex) {
                calField.setBorder(border);
            }
            
            try {
                int f = Integer.parseInt(fatField.getText());
            } catch (NumberFormatException ex) {
                fatField.setBorder(border);
            }
            
            try {
                int carb = Integer.parseInt(carbField.getText());
            } catch (NumberFormatException ex) {
                carbField.setBorder(border);
            }
            
            try {
                int p = Integer.parseInt(proteinField.getText());
            } catch (NumberFormatException ex) {
                proteinField.setBorder(border);
            }
        }
        
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    
    private void emptyTextBoxes() {
        nameField.setText("");
        calField.setText("");
        fatField.setText("");
        carbField.setText("");
        proteinField.setText("");
    }
    
    public DefaultTableModel buildTable(ResultSet rs)  {
        
        Vector<String> columnNames = new Vector<String>();
        
        columnNames.add("Name");
        columnNames.add("Cal");
        columnNames.add("F");
        columnNames.add("C");
        columnNames.add("P");
        
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        
        try {
            ResultSetMetaData metaData = rs.getMetaData();
            int columns = metaData.getColumnCount();

            /*
            // get names of columns
            for (int i = 1; i <= columns; i++) {
                columnNames.add(metaData.getColumnName(i));
            }
            */

            // get data for the table
            while (rs.next()) {
                Vector<Object> vector = new Vector<Object>();
                for (int i = 1; i <= columns; i++) {
                    vector.add(rs.getObject(i));
                }
                data.add(vector);
            }
        } catch (SQLException ex) {
            Logger.getLogger(DBHandler.class.getName()).log(Level.SEVERE, null, ex);
        } 

        dtm = new DefaultTableModel(data, columnNames);
        
        return dtm;

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new EditFood().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTextField calField;
    private javax.swing.JLabel calLable;
    private javax.swing.JTextField carbField;
    private javax.swing.JLabel carbLable;
    private javax.swing.JLabel dateLable;
    private javax.swing.JTextField fatField;
    private javax.swing.JLabel fatLable;
    private javax.swing.JTable foodTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLable;
    private javax.swing.JTextField proteinField;
    private javax.swing.JLabel proteinLable;
    private javax.swing.JLabel showDateLable;
    // End of variables declaration//GEN-END:variables
}
