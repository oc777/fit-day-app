
package myfitdayapp;

// green  (new Color(177, 192, 41));
// red    (new Color(222, 0, 33));
// blue   (new Color(135, 198, 197));

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Calendar;
import java.util.GregorianCalendar;



/**
 *
 * @author olgachristensen
 */
public class MainFrame extends javax.swing.JFrame {

    private DBHandler dbh;
    private String food;
    private String sport;
    private int goal;
    private int total; 
    private PieChart pChart;
    private String[] macros;
    private String today;
    
    private int width;
    private int width1;
    private int width2;
    
    
    public MainFrame() {
        dbh = new DBHandler();
        //today = getDate();
        today = dbh.getDate();
        macros = dbh.getMacros(today);
        // width of status bar
        width = 235;
        
        getContentPane().setBackground(new Color(51, 51, 51));
        initComponents();
        
        addChart();
        setDate();
        //updatePanels();
        setGoal();
        setTakenCalories(today);
        setSpentCalories(today);
        setTotalCalories();
        setMarginCalories();
        setMacros();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chart = new javax.swing.JPanel();
        txtGoal = new javax.swing.JLabel();
        txtConsumed = new javax.swing.JLabel();
        txtSpent = new javax.swing.JLabel();
        resGoal = new javax.swing.JLabel();
        resConsumed = new javax.swing.JLabel();
        resSpent = new javax.swing.JLabel();
        btnSetGoal = new javax.swing.JButton();
        fatColor = new javax.swing.JPanel();
        carbsColor = new javax.swing.JPanel();
        proteinColor = new javax.swing.JPanel();
        fatTxt = new javax.swing.JLabel();
        carbsTxt = new javax.swing.JLabel();
        proteinTxt = new javax.swing.JLabel();
        fatN = new javax.swing.JLabel();
        proteinN = new javax.swing.JLabel();
        carbsN = new javax.swing.JLabel();
        fatG = new javax.swing.JLabel();
        carbsG = new javax.swing.JLabel();
        proteinG = new javax.swing.JLabel();
        btnDate = new javax.swing.JButton();
        editFood = new javax.swing.JButton();
        editSport = new javax.swing.JButton();
        statusPanel = new javax.swing.JPanel() {

            @Override
            public void paintComponent(Graphics g) {

                super.paintComponent(g);
                drawStatusBar(g);
            }

        };
        resTotal = new javax.swing.JLabel();
        resMargin = new javax.swing.JLabel();
        btnStats = new javax.swing.JButton();
        resDate = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        chart.setBackground(new java.awt.Color(153, 153, 153));
        chart.setPreferredSize(new java.awt.Dimension(195, 195));

        javax.swing.GroupLayout chartLayout = new javax.swing.GroupLayout(chart);
        chart.setLayout(chartLayout);
        chartLayout.setHorizontalGroup(
            chartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 195, Short.MAX_VALUE)
        );
        chartLayout.setVerticalGroup(
            chartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 190, Short.MAX_VALUE)
        );

        txtGoal.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtGoal.setForeground(new java.awt.Color(255, 255, 255));
        txtGoal.setText("Goal:");
        txtGoal.setMaximumSize(new java.awt.Dimension(45, 40));
        txtGoal.setMinimumSize(new java.awt.Dimension(45, 40));
        txtGoal.setPreferredSize(new java.awt.Dimension(45, 40));

        txtConsumed.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtConsumed.setForeground(new java.awt.Color(255, 255, 255));
        txtConsumed.setText("Meals:");
        txtConsumed.setMaximumSize(new java.awt.Dimension(57, 40));
        txtConsumed.setMinimumSize(new java.awt.Dimension(57, 40));
        txtConsumed.setPreferredSize(new java.awt.Dimension(57, 40));

        txtSpent.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtSpent.setForeground(new java.awt.Color(255, 255, 255));
        txtSpent.setText("Sport:");
        txtSpent.setMaximumSize(new java.awt.Dimension(55, 40));
        txtSpent.setMinimumSize(new java.awt.Dimension(55, 40));
        txtSpent.setPreferredSize(new java.awt.Dimension(55, 40));

        resGoal.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        resGoal.setForeground(new java.awt.Color(255, 153, 0));
        resGoal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        resGoal.setText("2000");
        resGoal.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        resGoal.setMaximumSize(new java.awt.Dimension(44, 40));
        resGoal.setMinimumSize(new java.awt.Dimension(44, 40));
        resGoal.setPreferredSize(new java.awt.Dimension(44, 40));

        resConsumed.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        resConsumed.setForeground(new java.awt.Color(255, 153, 0));
        resConsumed.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        resConsumed.setText("2000");
        resConsumed.setMaximumSize(new java.awt.Dimension(44, 40));
        resConsumed.setMinimumSize(new java.awt.Dimension(44, 40));
        resConsumed.setPreferredSize(new java.awt.Dimension(44, 40));

        resSpent.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        resSpent.setForeground(new java.awt.Color(255, 153, 0));
        resSpent.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        resSpent.setText("2000");
        resSpent.setMaximumSize(new java.awt.Dimension(44, 40));
        resSpent.setMinimumSize(new java.awt.Dimension(44, 40));
        resSpent.setPreferredSize(new java.awt.Dimension(44, 40));

        btnSetGoal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/goal.png"))); // NOI18N
        btnSetGoal.setBorder(null);
        btnSetGoal.setBorderPainted(false);
        btnSetGoal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSetGoal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetGoalActionPerformed(evt);
            }
        });

        fatColor.setBackground(new java.awt.Color(135, 198, 197));

        javax.swing.GroupLayout fatColorLayout = new javax.swing.GroupLayout(fatColor);
        fatColor.setLayout(fatColorLayout);
        fatColorLayout.setHorizontalGroup(
            fatColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );
        fatColorLayout.setVerticalGroup(
            fatColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        carbsColor.setBackground(new java.awt.Color(177, 192, 41));

        javax.swing.GroupLayout carbsColorLayout = new javax.swing.GroupLayout(carbsColor);
        carbsColor.setLayout(carbsColorLayout);
        carbsColorLayout.setHorizontalGroup(
            carbsColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );
        carbsColorLayout.setVerticalGroup(
            carbsColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        proteinColor.setBackground(new java.awt.Color(222, 0, 33));

        javax.swing.GroupLayout proteinColorLayout = new javax.swing.GroupLayout(proteinColor);
        proteinColor.setLayout(proteinColorLayout);
        proteinColorLayout.setHorizontalGroup(
            proteinColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );
        proteinColorLayout.setVerticalGroup(
            proteinColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        fatTxt.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        fatTxt.setForeground(new java.awt.Color(255, 255, 255));
        fatTxt.setText("Fat");

        carbsTxt.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        carbsTxt.setForeground(new java.awt.Color(255, 255, 255));
        carbsTxt.setText("Carbs");

        proteinTxt.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        proteinTxt.setForeground(new java.awt.Color(255, 255, 255));
        proteinTxt.setText("Protein");

        fatN.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        fatN.setForeground(new java.awt.Color(255, 153, 0));
        fatN.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        fatN.setText("0");

        proteinN.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        proteinN.setForeground(new java.awt.Color(255, 153, 0));
        proteinN.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        proteinN.setText("0");

        carbsN.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        carbsN.setForeground(new java.awt.Color(255, 153, 0));
        carbsN.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        carbsN.setText("0");

        fatG.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        fatG.setForeground(new java.awt.Color(255, 153, 0));
        fatG.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        fatG.setText("g");

        carbsG.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        carbsG.setForeground(new java.awt.Color(255, 153, 0));
        carbsG.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        carbsG.setText("g");

        proteinG.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        proteinG.setForeground(new java.awt.Color(255, 153, 0));
        proteinG.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        proteinG.setText("g");

        btnDate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/calendar.png"))); // NOI18N
        btnDate.setBorder(null);
        btnDate.setBorderPainted(false);
        btnDate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDateActionPerformed(evt);
            }
        });

        editFood.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/food.png"))); // NOI18N
        editFood.setBorder(null);
        editFood.setBorderPainted(false);
        editFood.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editFood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editFoodActionPerformed(evt);
            }
        });

        editSport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sport.png"))); // NOI18N
        editSport.setBorder(null);
        editSport.setBorderPainted(false);
        editSport.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editSport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSportActionPerformed(evt);
            }
        });

        statusPanel.setBackground(new java.awt.Color(212, 212, 212));
        statusPanel.setPreferredSize(new java.awt.Dimension(286, 40));

        resTotal.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        resTotal.setForeground(new java.awt.Color(255, 255, 255));
        resTotal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        resTotal.setText("2000");

        resMargin.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        resMargin.setForeground(new java.awt.Color(255, 255, 255));
        resMargin.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        resMargin.setText("2000");

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(resMargin)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resTotal)
                    .addComponent(resMargin))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        btnStats.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/stats.png"))); // NOI18N
        btnStats.setToolTipText("");
        btnStats.setBorder(null);
        btnStats.setBorderPainted(false);
        btnStats.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatsActionPerformed(evt);
            }
        });

        resDate.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        resDate.setForeground(new java.awt.Color(255, 153, 0));
        resDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resDate.setText("25.05.2016");
        resDate.setMaximumSize(new java.awt.Dimension(90, 40));
        resDate.setMinimumSize(new java.awt.Dimension(90, 40));
        resDate.setPreferredSize(new java.awt.Dimension(90, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(carbsColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fatColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(proteinColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fatTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(carbsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(proteinTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(proteinN, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(carbsN, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fatN, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fatG)
                                    .addComponent(proteinG)
                                    .addComponent(carbsG)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtConsumed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSpent, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtGoal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(resSpent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(resConsumed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(resGoal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnSetGoal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(editSport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(editFood)))
                            .addComponent(chart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDate)
                                .addGap(12, 12, 12)
                                .addComponent(resDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnStats))
                            .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDate)
                    .addComponent(btnStats)
                    .addComponent(resDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(statusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtGoal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSpent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtConsumed, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSetGoal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editSport, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editFood))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(resGoal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resSpent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resConsumed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addComponent(chart, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fatTxt)
                            .addComponent(fatColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(carbsTxt)
                            .addComponent(carbsColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(proteinColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(proteinTxt)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fatN)
                            .addComponent(fatG))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(carbsN)
                            .addComponent(carbsG))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(proteinN)
                            .addComponent(proteinG))))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    // set value to lable goal
    private void setGoal() {
        
        // if the goal for today was already set
        if (dbh.checkTotals(today)) {
            goal = Integer.parseInt(dbh.getGoal(today));
            resGoal.setText("" + goal);
            //resGoal.setText(dbh.getGoal(today));
        }
            
        
        // if the goal for today hasn't been set -> set as latest goal
        else {
            goal = dbh.latestGoal();
            dbh.insertDataGoal(today, goal);
            resGoal.setText("" + goal);
        }
    }
    
    // draw the chart
    private void addChart() {
        // no food entered today -> empty chart
        if (!dbh.checkFood(today)) {
            
            pChart = new PieChart();
            
        // macros available - fill the chart     
        } else {
            int fat = Integer.parseInt(macros[0]);
            int carbs = Integer.parseInt(macros[1]);
            int protein = Integer.parseInt(macros[2]);
            
            pChart = new PieChart(fat, carbs, protein);
            
        }
        
        chart.add(pChart.panel);
        chart.validate();
        
    }
    
    // redraw chart with new data
    private void updateChart() {
        chart.removeAll();
        chart.revalidate();
        addChart();
        chart.repaint();
    }
    
    // show macros in text form
    private void setMacros() {
        if (macros[0] != null) {
            fatN.setText(macros[0]);
            carbsN.setText(macros[1]);
            proteinN.setText(macros[2]);
        }
        // no records made on the chosen date
        else {
            fatN.setText("0");
            carbsN.setText("0");
            proteinN.setText("0");
        }
            
        
    }
    
    // set value for date lable
    private void setDate(){
        //resDate.setText(getDate());
        resDate.setText(today);
    }
    
    
    // get todays date
    public String getDate() {
        Calendar calendar = new GregorianCalendar();
        int month = calendar.get(Calendar.MONTH);
        int year = calendar.get(Calendar.YEAR);
        int day = calendar.get(Calendar.DAY_OF_MONTH);
        
        String date = "";
        //date += day +"."+(month+1)+"."+ year;
        date += year + "-" + (month+1) + "-" + day;
        
        
        return date;
        
    }
    
    
    // get the status bar
    private void drawStatusBar(Graphics g) {
        Graphics2D box = (Graphics2D) g;
        
        if (goal - total > 0) {
            
            getWidthPositive();
            
            // green
            box.setColor(new Color(177, 192, 41));
            box.fillRect(0, 0, width1, 40);
            
            // light grey
            //box.setColor(new Color(212, 212, 212));
            box.setColor(Color.GRAY);
            box.fillRect(width1, 0, width2, 40);
            
            
            
        } else {
            
            getWidthNegative();
            // green
            box.setColor(new Color(177, 192, 41));
            box.fillRect(0, 0, width1, 40);
            
            // red
            box.setColor(new Color(222, 0, 33));
            box.fillRect(width1, 0, width2, 40);
            
            
        }
        
    }
    
    // width of status bar - goal > total
    private void getWidthPositive() {
        float x = width * (float)total / (float)goal;
        width1 = (int) x;
        width2 = width - width1;
    }
    
    // width of status bar - goal < total
    private void getWidthNegative() {
        float x = width * ((float)total / (float)goal - 1);
        width2 = (int) x;
        width1 = width - width2;
    }
    
    // CLICKED set goal
    private void btnSetGoalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetGoalActionPerformed
        SetGoal sg = new SetGoal(this, true);
        sg.setLocationRelativeTo(this);
        sg.setVisible(true);
        
        // update MainFrame when SetGoal frame is closed
        sg.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                //goal = sg.goal();
                //resGoal.setText("" + goal);
                setGoal();
                setMarginCalories();
                //dbh.printAllTotals(); 
                statusPanel.repaint();
            }
        });
        
    }//GEN-LAST:event_btnSetGoalActionPerformed

    // choose date
    private void btnDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDateActionPerformed
        /*
        ChooseDate cd = new ChooseDate(today, this, true);
        
        */
        
        MyCalendar cd = new MyCalendar(this, true);
        
        cd.setLocationRelativeTo(this);
        cd.setVisible(true);
        
        // update MainFrame when chooseDate frame is closed
        cd.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                if (cd.date != null)
                    today = cd.date;
                System.out.println(today);
                macros = dbh.getMacros(today);
                setDate();
                updateChart();
                
                //updatePanels();
                setGoal();
                setTakenCalories(today);
                setSpentCalories(today);
                setTotalCalories();
                setMarginCalories();
                setMacros();
                statusPanel.repaint();

            }
        });
    }//GEN-LAST:event_btnDateActionPerformed

    // edit food records for a date
    private void editFoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editFoodActionPerformed
        EditFood ef = new EditFood(today, this, true);
        
        ef.setLocationRelativeTo(this);
        ef.setVisible(true);
        
        
        // update MainFrame when EditFood frame is closed
        ef.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                food = dbh.getTodayFood(today);
                //textFood.setText(food);
                macros = dbh.getMacros(today);
                    
                updateChart();
                setTakenCalories(today);
                setTotalCalories();
                setMarginCalories();
                setMacros();
                statusPanel.repaint();
            }
        });
        
    }//GEN-LAST:event_editFoodActionPerformed

    // edit sport records for a date
    private void editSportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSportActionPerformed
        EditSport es = new EditSport(today, this, true);
        
        es.setLocationRelativeTo(this);
        es.setVisible(true);
        
        // update MainFrame when EditSport frame is closed
        es.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                sport = dbh.getTodaySport(today);
                //textSport.setText(sport);
                    
                setSpentCalories(today);
                setTotalCalories();
                setMarginCalories();
                statusPanel.repaint();
            }
        });
        
    }//GEN-LAST:event_editSportActionPerformed

    private void btnStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnStatsActionPerformed

    // set total consumed calories counter
    private void setTakenCalories(String date) {
        if (dbh.checkFood(today))
            resConsumed.setText(dbh.getFoodTotal(date));
        else
            resConsumed.setText("0");
    }
    
    // set total spent calories counter
    private void setSpentCalories(String date) {
        if (dbh.checkSport(today))
            resSpent.setText(dbh.getSportTotal(date));
        else
            resSpent.setText("0");
    }
    
    // set total calories counter
    private void setTotalCalories() {
        //if (dbh.checkSport(today)) {
            int foodCal = Integer.parseInt(resConsumed.getText());
            int sportCal = Integer.parseInt(resSpent.getText());
            total = foodCal - sportCal;

            resTotal.setText("" + total);
        //} else
        //    resTotal.setText("0");
    }
    
    // set margin counter 
    private void setMarginCalories() {
        
        int totalCal = Integer.parseInt(resTotal.getText());
        int goalCal = Integer.parseInt(resGoal.getText());
        int margin = goalCal - totalCal;
        
        resMargin.setText("" + margin);
    }
    
    //REMOVE main ???
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDate;
    private javax.swing.JButton btnSetGoal;
    private javax.swing.JButton btnStats;
    private javax.swing.JPanel carbsColor;
    private javax.swing.JLabel carbsG;
    private javax.swing.JLabel carbsN;
    private javax.swing.JLabel carbsTxt;
    private javax.swing.JPanel chart;
    private javax.swing.JButton editFood;
    private javax.swing.JButton editSport;
    private javax.swing.JPanel fatColor;
    private javax.swing.JLabel fatG;
    private javax.swing.JLabel fatN;
    private javax.swing.JLabel fatTxt;
    private javax.swing.JPanel proteinColor;
    private javax.swing.JLabel proteinG;
    private javax.swing.JLabel proteinN;
    private javax.swing.JLabel proteinTxt;
    private javax.swing.JLabel resConsumed;
    private javax.swing.JLabel resDate;
    private javax.swing.JLabel resGoal;
    private javax.swing.JLabel resMargin;
    private javax.swing.JLabel resSpent;
    private javax.swing.JLabel resTotal;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JLabel txtConsumed;
    private javax.swing.JLabel txtGoal;
    private javax.swing.JLabel txtSpent;
    // End of variables declaration//GEN-END:variables
}


    /*
    // update food and sport text fields
    private void updatePanels() {
        if (dbh.checkFood(today)) {
            food = dbh.getTodayFood(today);
            textFood.setText(food);
        }
        else
            textFood.setText("");
        
        if (dbh.checkSport(today)) {
            sport = dbh.getTodaySport(today);
            textSport.setText(sport);
        }
        else
            textSport.setText("");
    }
    */