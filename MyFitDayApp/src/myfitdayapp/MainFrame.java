
package myfitdayapp;


import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Calendar;
import java.util.GregorianCalendar;



/**
 *
 * @author olgachristensen
 */
public class MainFrame extends javax.swing.JFrame {

    private DBHandler dbh;
    private String food;
    private String sport;
    private int goal;
    private PieChart pChart;
    private String[] macros;
    private String today;
    
    
    public MainFrame() {
        dbh = new DBHandler();
        //today = getDate();
        today = dbh.getDate();
        macros = dbh.getMacros(today);
        
        initComponents();
        
        addChart();
        setDate();
        //updatePanels();
        setGoal();
        setTakenCalories(today);
        setSpentCalories(today);
        setTotalCalories();
        setMarginCalories();
        setMacros();
        
        //dbh.printAllTotals();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lPanel = new javax.swing.JPanel();
        chart = new javax.swing.JPanel();
        txtGoal = new javax.swing.JLabel();
        txtMargin = new javax.swing.JLabel();
        txtTotal = new javax.swing.JLabel();
        txtConsumed = new javax.swing.JLabel();
        txtSpent = new javax.swing.JLabel();
        resGoal = new javax.swing.JLabel();
        resTotal = new javax.swing.JLabel();
        resConsumed = new javax.swing.JLabel();
        resSpent = new javax.swing.JLabel();
        resMargin = new javax.swing.JLabel();
        btnSetGoal = new javax.swing.JButton();
        fatColor = new javax.swing.JPanel();
        carbsColor = new javax.swing.JPanel();
        proteinColor = new javax.swing.JPanel();
        fatTxt = new javax.swing.JLabel();
        carbsTxt = new javax.swing.JLabel();
        proteinTxt = new javax.swing.JLabel();
        fatN = new javax.swing.JLabel();
        proteinN = new javax.swing.JLabel();
        carbsN = new javax.swing.JLabel();
        fatG = new javax.swing.JLabel();
        carbsG = new javax.swing.JLabel();
        proteinG = new javax.swing.JLabel();
        resDate = new javax.swing.JLabel();
        btnDate = new javax.swing.JButton();
        addFood = new javax.swing.JButton();
        editFood = new javax.swing.JButton();
        addSport = new javax.swing.JButton();
        editSport = new javax.swing.JButton();
        txtDate = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(230, 230, 230));
        setResizable(false);

        lPanel.setBackground(java.awt.Color.darkGray);

        chart.setBackground(new java.awt.Color(153, 153, 153));
        chart.setPreferredSize(new java.awt.Dimension(195, 195));

        javax.swing.GroupLayout chartLayout = new javax.swing.GroupLayout(chart);
        chart.setLayout(chartLayout);
        chartLayout.setHorizontalGroup(
            chartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 195, Short.MAX_VALUE)
        );
        chartLayout.setVerticalGroup(
            chartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 190, Short.MAX_VALUE)
        );

        txtGoal.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtGoal.setForeground(new java.awt.Color(255, 255, 255));
        txtGoal.setText("Goal:");

        txtMargin.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtMargin.setForeground(new java.awt.Color(255, 255, 255));
        txtMargin.setText("To go:");

        txtTotal.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtTotal.setForeground(new java.awt.Color(255, 255, 255));
        txtTotal.setText("Total:");

        txtConsumed.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtConsumed.setForeground(new java.awt.Color(255, 255, 255));
        txtConsumed.setText("Taken:");

        txtSpent.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtSpent.setForeground(new java.awt.Color(255, 255, 255));
        txtSpent.setText("Spent:");

        resGoal.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        resGoal.setForeground(new java.awt.Color(255, 153, 0));
        resGoal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        resGoal.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        resTotal.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        resTotal.setForeground(new java.awt.Color(255, 153, 0));
        resTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        resTotal.setText("2000");

        resConsumed.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        resConsumed.setForeground(new java.awt.Color(255, 153, 0));
        resConsumed.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        resConsumed.setText("2000");

        resSpent.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        resSpent.setForeground(new java.awt.Color(255, 153, 0));
        resSpent.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        resSpent.setText("2000");

        resMargin.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        resMargin.setForeground(new java.awt.Color(255, 153, 0));
        resMargin.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        resMargin.setText("2000");

        btnSetGoal.setText("...");
        btnSetGoal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetGoalActionPerformed(evt);
            }
        });

        fatColor.setBackground(new java.awt.Color(255, 200, 0));

        javax.swing.GroupLayout fatColorLayout = new javax.swing.GroupLayout(fatColor);
        fatColor.setLayout(fatColorLayout);
        fatColorLayout.setHorizontalGroup(
            fatColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );
        fatColorLayout.setVerticalGroup(
            fatColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        carbsColor.setBackground(java.awt.Color.cyan);

        javax.swing.GroupLayout carbsColorLayout = new javax.swing.GroupLayout(carbsColor);
        carbsColor.setLayout(carbsColorLayout);
        carbsColorLayout.setHorizontalGroup(
            carbsColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );
        carbsColorLayout.setVerticalGroup(
            carbsColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        proteinColor.setBackground(java.awt.Color.red);

        javax.swing.GroupLayout proteinColorLayout = new javax.swing.GroupLayout(proteinColor);
        proteinColor.setLayout(proteinColorLayout);
        proteinColorLayout.setHorizontalGroup(
            proteinColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );
        proteinColorLayout.setVerticalGroup(
            proteinColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        fatTxt.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        fatTxt.setForeground(new java.awt.Color(255, 255, 255));
        fatTxt.setText("Fat");

        carbsTxt.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        carbsTxt.setForeground(new java.awt.Color(255, 255, 255));
        carbsTxt.setText("Carbs");

        proteinTxt.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        proteinTxt.setForeground(new java.awt.Color(255, 255, 255));
        proteinTxt.setText("Protein");

        fatN.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        fatN.setForeground(new java.awt.Color(255, 153, 0));
        fatN.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        fatN.setText("0");

        proteinN.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        proteinN.setForeground(new java.awt.Color(255, 153, 0));
        proteinN.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        proteinN.setText("0");

        carbsN.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        carbsN.setForeground(new java.awt.Color(255, 153, 0));
        carbsN.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        carbsN.setText("0");

        fatG.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        fatG.setForeground(new java.awt.Color(255, 153, 0));
        fatG.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        fatG.setText("g");

        carbsG.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        carbsG.setForeground(new java.awt.Color(255, 153, 0));
        carbsG.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        carbsG.setText("g");

        proteinG.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        proteinG.setForeground(new java.awt.Color(255, 153, 0));
        proteinG.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        proteinG.setText("g");

        resDate.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        resDate.setForeground(new java.awt.Color(255, 153, 0));
        resDate.setText("5 May 2016");

        btnDate.setText("...");
        btnDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDateActionPerformed(evt);
            }
        });

        addFood.setText("+");
        addFood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFoodActionPerformed(evt);
            }
        });

        editFood.setText("...");
        editFood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editFoodActionPerformed(evt);
            }
        });

        addSport.setText("+");
        addSport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSportActionPerformed(evt);
            }
        });

        editSport.setText("...");
        editSport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSportActionPerformed(evt);
            }
        });

        txtDate.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        txtDate.setForeground(new java.awt.Color(255, 255, 255));
        txtDate.setText("Date:");

        javax.swing.GroupLayout lPanelLayout = new javax.swing.GroupLayout(lPanel);
        lPanel.setLayout(lPanelLayout);
        lPanelLayout.setHorizontalGroup(
            lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lPanelLayout.createSequentialGroup()
                .addGap(0, 72, Short.MAX_VALUE)
                .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtMargin, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resMargin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lPanelLayout.createSequentialGroup()
                .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(lPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(chart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lPanelLayout.createSequentialGroup()
                                .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(lPanelLayout.createSequentialGroup()
                                        .addComponent(txtDate)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(resDate))
                                    .addGroup(lPanelLayout.createSequentialGroup()
                                        .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lPanelLayout.createSequentialGroup()
                                                .addComponent(txtGoal)
                                                .addGap(19, 19, 19))
                                            .addComponent(txtConsumed)
                                            .addComponent(txtSpent, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(resConsumed, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(resSpent, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(resGoal, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(30, 30, 30)
                                .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addFood, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addSport, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSetGoal, javax.swing.GroupLayout.PREFERRED_SIZE, 41, Short.MAX_VALUE)
                            .addComponent(editFood, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(editSport, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(btnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(lPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(lPanelLayout.createSequentialGroup()
                                .addComponent(proteinColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(proteinTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(lPanelLayout.createSequentialGroup()
                                .addComponent(carbsColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(carbsTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(lPanelLayout.createSequentialGroup()
                                .addComponent(fatColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(fatTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(proteinN, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(carbsN, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fatN, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fatG)
                            .addComponent(proteinG)
                            .addComponent(carbsG))
                        .addGap(29, 29, 29)))
                .addGap(15, 15, 15))
        );
        lPanelLayout.setVerticalGroup(
            lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lPanelLayout.createSequentialGroup()
                        .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(resDate)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(resGoal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtGoal, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSetGoal)))
                        .addGap(12, 12, 12)
                        .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSpent)
                            .addComponent(resSpent)
                            .addComponent(addSport)
                            .addComponent(editSport))
                        .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(lPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(resConsumed))
                            .addGroup(lPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtConsumed)
                                    .addComponent(addFood)
                                    .addComponent(editFood)))))
                    .addComponent(btnDate))
                .addGap(39, 39, 39)
                .addComponent(chart, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lPanelLayout.createSequentialGroup()
                        .addComponent(fatTxt)
                        .addGap(18, 18, 18)
                        .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(carbsColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(carbsTxt))
                        .addGap(18, 18, 18)
                        .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(proteinColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(proteinTxt)))
                    .addComponent(fatColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(lPanelLayout.createSequentialGroup()
                        .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fatN)
                            .addComponent(fatG))
                        .addGap(18, 18, 18)
                        .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(carbsN)
                            .addComponent(carbsG))
                        .addGap(18, 18, 18)
                        .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(proteinN)
                            .addComponent(proteinG))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotal)
                    .addComponent(resTotal))
                .addGap(8, 8, 8)
                .addGroup(lPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMargin)
                    .addComponent(resMargin))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // set value to lable goal
    private void setGoal() {
        
        // if the goal for today was already set
        if (dbh.checkTotals(today)) {
            //resGoal.setText("" + goal);
            resGoal.setText(dbh.getGoal(today));
        }
            
        
        // if the goal for today hasn't been set -> set as latest goal
        else {
            goal = dbh.latestGoal();
            dbh.insertDataGoal(today, goal);
            resGoal.setText("" + goal);
        }
    }
    
    // draw the chart
    private void addChart() {
        // no food entered today -> empty chart
        if (!dbh.checkFood(today)) {
            
            pChart = new PieChart();
            
        // macros available     
        } else {
            int fat = Integer.parseInt(macros[0]);
            int carbs = Integer.parseInt(macros[1]);
            int protein = Integer.parseInt(macros[2]);
            
            pChart = new PieChart(fat, carbs, protein);
            
        }
        
        chart.add(pChart.panel);
        chart.validate();
        
    }
    
    // redraw chart with new data
    private void updateChart() {
        chart.removeAll();
        chart.revalidate();
        addChart();
        chart.repaint();
    }
    
    private void setMacros() {
        if (macros[0] != null) {
            fatN.setText(macros[0]);
            carbsN.setText(macros[1]);
            proteinN.setText(macros[2]);
        }
        else {
            fatN.setText("0");
            carbsN.setText("0");
            proteinN.setText("0");
        }
            
        
    }
    
    // set value for date lable
    private void setDate(){
        //resDate.setText(getDate());
        resDate.setText(today);
    }
    
    /*
    // update food and sport text fields
    private void updatePanels() {
        if (dbh.checkFood(today)) {
            food = dbh.getTodayFood(today);
            textFood.setText(food);
        }
        else
            textFood.setText("");
        
        if (dbh.checkSport(today)) {
            sport = dbh.getTodaySport(today);
            textSport.setText(sport);
        }
        else
            textSport.setText("");
    }
    */
    
    // get todays date
    public String getDate() {
        Calendar calendar = new GregorianCalendar();
        int month = calendar.get(Calendar.MONTH);
        int year = calendar.get(Calendar.YEAR);
        int day = calendar.get(Calendar.DAY_OF_MONTH);
        
        String date = "";
        //date += day +"."+(month+1)+"."+ year;
        date += year + "-" + (month+1) + "-" + day;
        
        
        return date;
        
    }
    
    // CLICKED add food
    private void addFoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFoodActionPerformed
        AddFood af;
        try {
            af = new AddFood(this, true);
            af.setLocationRelativeTo(this);
            af.setVisible(true);
            
            // update MainFrame when AddFood frame is closed
            af.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    food = dbh.getTodayFood(today);
                    //textFood.setText(food);
                    macros = dbh.getMacros(today);
                    
                    updateChart();
                    setTakenCalories(today);
                    setTotalCalories();
                    setMarginCalories();
                    setMacros();
                }
            });
            
            
            
        } catch (Exception ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_addFoodActionPerformed

    // CLICKED add sport
    private void addSportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSportActionPerformed
        AddSport as;
        try {
            as = new AddSport(this, true);
            as.setLocationRelativeTo(this);
            as.setVisible(true);
            
            
            // update MainFrame when AddSport frame is closed
            as.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosed(WindowEvent e) {
                    sport = dbh.getTodaySport(today);
                    //textSport.setText(sport);
                    
                    setSpentCalories(today);
                    setTotalCalories();
                    setMarginCalories();
                }
            });
        } catch (Exception ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_addSportActionPerformed

    // CLICKED set goal
    private void btnSetGoalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetGoalActionPerformed
        SetGoal sg = new SetGoal(this, true);
        sg.setLocationRelativeTo(this);
        sg.setVisible(true);
        
        // update MainFrame when SetGoal frame is closed
        sg.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                //goal = sg.goal();
                //resGoal.setText("" + goal);
                setGoal();
                setMarginCalories();
                //dbh.printAllTotals(); 
            }
        });
        
    }//GEN-LAST:event_btnSetGoalActionPerformed

    private void btnDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDateActionPerformed
        ChooseDate cd = new ChooseDate(today, this, true);
        cd.setLocationRelativeTo(this);
        cd.setVisible(true);
        
        // update MainFrame when chooseDate frame is closed
        cd.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                today = cd.date;
                System.out.println(today);
                macros = dbh.getMacros(today);
                setDate();
                updateChart();
                
                //updatePanels();
                setGoal();
                setTakenCalories(today);
                setSpentCalories(today);
                setTotalCalories();
                setMarginCalories();
                setMacros();

            }
        });
    }//GEN-LAST:event_btnDateActionPerformed

    private void editFoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editFoodActionPerformed
        EditFood ef = new EditFood(today, this, true);
        
        ef.setLocationRelativeTo(this);
        ef.setVisible(true);
        
        
        // update MainFrame when EditFood frame is closed
        ef.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                food = dbh.getTodayFood(today);
                //textFood.setText(food);
                macros = dbh.getMacros(today);
                    
                updateChart();
                setTakenCalories(today);
                setTotalCalories();
                setMarginCalories();
                setMacros();
            }
        });
        
    }//GEN-LAST:event_editFoodActionPerformed

    private void editSportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSportActionPerformed
        EditSport es = new EditSport(today, this, true);
        
        es.setLocationRelativeTo(this);
        es.setVisible(true);
        
        // update MainFrame when EditSport frame is closed
        es.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                sport = dbh.getTodaySport(today);
                //textSport.setText(sport);
                    
                setSpentCalories(today);
                setTotalCalories();
                setMarginCalories();
            }
        });
        
    }//GEN-LAST:event_editSportActionPerformed

    // set total consumed calories counter
    private void setTakenCalories(String date) {
        if (dbh.checkFood(today))
            resConsumed.setText(dbh.getFoodTotal(date));
        else
            resConsumed.setText("0");
    }
    
    // set total spent calories counter
    private void setSpentCalories(String date) {
        if (dbh.checkSport(today))
            resSpent.setText(dbh.getSportTotal(date));
        else
            resSpent.setText("0");
    }
    
    // set total calories counter
    private void setTotalCalories() {
        //if (dbh.checkSport(today)) {
            int foodCal = Integer.parseInt(resConsumed.getText());
            int sportCal = Integer.parseInt(resSpent.getText());
            int totalCal = foodCal - sportCal;

            resTotal.setText("" + totalCal);
        //} else
        //    resTotal.setText("0");
    }
    
    // set margin counter 
    private void setMarginCalories() {
        
        int totalCal = Integer.parseInt(resTotal.getText());
        int goalCal = Integer.parseInt(resGoal.getText());
        int margin = goalCal - totalCal;
        
        resMargin.setText("" + margin);
    }
    
    //REMOVE main ???
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFood;
    private javax.swing.JButton addSport;
    private javax.swing.JButton btnDate;
    private javax.swing.JButton btnSetGoal;
    private javax.swing.JPanel carbsColor;
    private javax.swing.JLabel carbsG;
    private javax.swing.JLabel carbsN;
    private javax.swing.JLabel carbsTxt;
    private javax.swing.JPanel chart;
    private javax.swing.JButton editFood;
    private javax.swing.JButton editSport;
    private javax.swing.JPanel fatColor;
    private javax.swing.JLabel fatG;
    private javax.swing.JLabel fatN;
    private javax.swing.JLabel fatTxt;
    private javax.swing.JPanel lPanel;
    private javax.swing.JPanel proteinColor;
    private javax.swing.JLabel proteinG;
    private javax.swing.JLabel proteinN;
    private javax.swing.JLabel proteinTxt;
    private javax.swing.JLabel resConsumed;
    private javax.swing.JLabel resDate;
    private javax.swing.JLabel resGoal;
    private javax.swing.JLabel resMargin;
    private javax.swing.JLabel resSpent;
    private javax.swing.JLabel resTotal;
    private javax.swing.JLabel txtConsumed;
    private javax.swing.JLabel txtDate;
    private javax.swing.JLabel txtGoal;
    private javax.swing.JLabel txtMargin;
    private javax.swing.JLabel txtSpent;
    private javax.swing.JLabel txtTotal;
    // End of variables declaration//GEN-END:variables
}
